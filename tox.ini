[tox]
envlist = flake8,
          py26twisted,
          py26asyncio,
          py27twisted,
          py33twisted,
          py34twisted,
          py27asyncio,
          py33asyncio,
          py34asyncio,
          pypy2twisted,
          pypy2asyncio

[testenv]
deps =
    pytest
    mock==1.0.1
    coverage
commands = python -m pytest
whitelist_externals = sh


[testenv:flake8]
deps =
   flake8
commands =
   sh -c "which python"
   python -V
   flake8 --version
   flake8 -v --ignore=E501 autobahn
basepython = python2.7


[testenv:py26twisted]
deps =
   {[testenv]deps}
   twisted
   unittest2
commands =
   sh -c "which python"
   sh -c "which trial"
   python -V
   trial --version
   trial autobahn
basepython = python2.6
install_command = pip install {packages} autobahn[twisted,serialization]
setenv =
   USE_TWISTED = 1


[testenv:py26asyncio]
deps =
   {[testenv]deps}
   unittest2
commands =
   sh -c "which python"
   python -V
   py.test autobahn/
basepython = python2.6
install_command = pip install {packages} autobahn[asyncio,serialization]
setenv =
   USE_ASYNCIO = 1


[testenv:py27twisted]
commands =
   sh -c "which python"
   sh -c "which trial"
   sh -c "which coverage"
   python -V
   coverage --version
   {envbindir}/trial --version
   # XXX should probably add --branch
   # note: always doing --append so we can get coverage across all
   # Python versions at once; see "make test_coverage"
   coverage run --append --source=autobahn --omit=*test* {envbindir}/trial autobahn
basepython = python2.7
install_command = pip install {packages} autobahn[twisted,serialization]
setenv =
   USE_TWISTED = 1


[testenv:py33twisted]
commands =
   sh -c "which python"
   sh -c "which coverage"
   python -V
   coverage --version
   # XXX should probably add --branch
   # note: always doing --append so we can get coverage across all
   # Python versions at once; see "make test_coverage"
   coverage run --append --source=autobahn --omit=*test* {envbindir}/py.test autobahn/wamp/test/test_protocol.py autobahn/wamp/test/test_message.py autobahn/wamp/test/test_auth.py autobahn/wamp/test/test_protocol_peer.py autobahn/wamp/test/test_serializer.py autobahn/wamp/test/test_uri_pattern.py autobahn/wamp/test/test_user_handler_errors.py autobahn/websocket/test/test_websocket.py
basepython = python3.3
install_command = pip install {packages} autobahn[twisted,serialization]
setenv =
   USE_TWISTED = 1


[testenv:py34twisted]
commands =
   sh -c "which python"
   sh -c "which coverage"
   python -V
   coverage --version
   # XXX should probably add --branch
   # note: always doing --append so we can get coverage across all
   # Python versions at once; see "make test_coverage"
   coverage run --append --source=autobahn --omit=*test* {envbindir}/py.test autobahn/wamp/test/test_protocol.py autobahn/wamp/test/test_message.py autobahn/wamp/test/test_auth.py autobahn/wamp/test/test_protocol_peer.py autobahn/wamp/test/test_serializer.py autobahn/wamp/test/test_uri_pattern.py autobahn/wamp/test/test_user_handler_errors.py autobahn/websocket/test/test_websocket.py
basepython = python3.4
install_command = pip install {packages} autobahn[twisted,serialization]
setenv =
   USE_TWISTED = 1


[testenv:py27asyncio]
commands =
   sh -c "which python"
   python -V
   coverage --version
   coverage run --append --source=autobahn --omit=*test* {envbindir}/py.test autobahn/
basepython = python2.7
install_command = pip install {packages} autobahn[asyncio,serialization]
setenv =
   USE_ASYNCIO = 1


[testenv:py33asyncio]
commands =
   sh -c "which python"
   python -V
   coverage --version
   coverage run --append --source=autobahn --omit=*test* {envbindir}/py.test autobahn/
basepython = python3.3
install_command = pip install {packages} autobahn[asyncio,serialization]
setenv =
   USE_ASYNCIO = 1


[testenv:py34asyncio]
commands =
   sh -c "which python"
   python -V
   coverage --version
   coverage run --append --source=autobahn --omit=*test* {envbindir}/py.test autobahn/
basepython = python3.4
install_command = pip install {packages} autobahn[asyncio,serialization]
setenv =
   USE_ASYNCIO = 1


[testenv:pypy2twisted]
deps =
   {[testenv]deps}
   twisted
commands =
   sh -c "which python"
   sh -c "which trial"
   sh -c "which coverage"
   python -V
   {envbindir}/trial --version
   coverage --version
   coverage run --append --source=autobahn --omit=*test* {envbindir}/trial autobahn/
basepython = pypy
install_command = pip install {packages} autobahn[twisted,serialization]
setenv =
   USE_TWISTED = 1


[testenv:pypy2asyncio]
commands =
   sh -c "which python"
   sh -c "which coverage"
   python -V
   coverage --version
   {envbindir}/py.test --version
   coverage run --append --source=autobahn --omit=*test* {envbindir}/py.test autobahn/
basepython = pypy
install_command = pip install {packages} autobahn[asyncio,serialization]
setenv =
   USE_ASYNCIO = 1
